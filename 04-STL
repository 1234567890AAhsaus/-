//04-STL

//A
#include<bits/stdc++.h>
using namespace std;
int main(){
    stack<int>s;
    int temp;
    for(;;){
        cin>>temp;
        if(temp) s.push(temp);
        else break;
    }
    while(!s.empty()){
        cout<<s.top()<<" ";
        s.pop();
    }
    return 0;
}

//B
#include<bits/stdc++.h>
using namespace std;
string s;
stack<int>s;
int main(){
    cin>>s;
    for(int i=0;s[i]!='@';i++){
        if(s[i]=='('){
            s.push(1);
        }
        else if(s[i]==')'){
            if(s.empty()){
                cout<<"NO";
                return 0;
            }
            s.pop();
        }
    }
    if(s.empty()) cout<<"YES";
    else cout<<"NO";
    return 0;
}

//C
#include<bits/stdc++.h>
using namespace std;
string s;
stack<int>st;
int main(){
    int last=0,res=0,temp1,temp2;
    cin>>s;
    for(int i=0;s[i]!='@';i++){
        switch(s[i]){
            case '.':
                st.push(last); last=0; break;
            case '+':
                temp1=st.top(); st.pop();
                temp2=st.top(); st.pop();
                st.push(temp1+temp2);
                break;
            case '-':
                temp1=st.top(); st.pop();
                temp2=st.top(); st.pop();
                st.push(temp2-temp1);
                break;
            case '*':
                temp1=st.top(); st.pop();
                temp2=st.top(); st.pop();
                st.push(temp1*temp2);
                break;
            case '/':
                temp1=st.top(); st.pop();
                temp2=st.top(); st.pop();
                st.push(temp2/temp1);
                break;
            default:
                last=last*10+s[i]-'0';
                break;
        }
    }
    cout<<st.top();
    return 0;
}

//D
#include<bits/stdc++.h>
using namespace std;
queue<int>qu;
int main(){
    int m,n,i,temp; cin>>n>>m;
    cin>>n>>m;
    for(int i=1;i<=n;i++) qu.push(i);
    while(!qu.empty()){
        for(i=1;i<m;i++){
            temp=qu.front();
            qu.pop();
            qu.push(temp);
        }
        cout<<qu.front()<<" "; 
        qu.pop();
    }
    return 0;
}

//E
#include<bits/stdc++.h>
using namespace std;
int main(){
    queue<int>a;
    int hash[1023]={0};
    int m,n,temp,num;
    cin>>m>>n;
    while(n--){
        cin>>temp;
        if(!hash[temp]){
            hash[temp]=1;
            num++;
            q.push(temp);
            if(a.size()>m){
                hash[a.front()]=0;
                a.pop();
            }
        }
    }
    cout<<num;
    return 0;
}

//F
#include<bits/stdc++.h>
using namespace std;
priority_queue<int,vector<int>,greater<int>>pq;
int main(){
    cin>>n;
    while(n--){
        cin>>temp;
        pq.push(temp);
    }
    long long res=0;
    while(pq.size()>1){
        int temp=pq.top(); pq.pop();
        temp+=pq.top(); pq.pop();
        res+=temp;
        pq.push(temp);
    }
    cout<<res;
    return 0;
}

//G
#include<bits/stdc++.h>
using namespace std;
const int N=1e5+10;
priority_queue<int>q1;
priority_queue<int,vector<int>,greater<int>>q2;
int mid=0,num[N];
int main(){
    int n;
    for(int i=1;i<=n;i++) cin>>num[i];
    mid=num[1]; cout<<mid<<endl;
    for(int i=2;i<=n;i++){
        if(num[i]>mid){
            q2.push(num[i]);
        }
        else q1.push(num[i]);
        if(i&1){
            while(q1.size()>q2.size()){
                q2.push(mid);
                mid=q1.top(); q1.pop();
            }
            while(q1.size()<q2.size()){
                q1.push(mid);
                mid=q2.top(); q2.pop();
            }
            cout<<mid<<endl;
        }
    }
    return 0;
}
